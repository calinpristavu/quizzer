{{ template "header" .User }}

<!--suppress ALL -->
<div class="container">
    <div class="section col-md-12">
        <div class="section-content">
            <div>{{raw .Question.Text}}</div>

            <div style="width: 100%; display: flex; justify-content: space-between">
                <div id="palette" style="width: 100px; margin-right: 2px; background-color: whitesmoke; border: solid 1px black"></div>
                <div id="diagram" style="flex-grow: 1; height: 750px; border: solid 1px black"></div>
            </div>

            <form name="flow_diagram_question" action="/question/{{.Qidx}}" method="POST" onsubmit="return save(this);">
                <input type="hidden" id="diagram-json" name="flow_diagram_json">
                <input type="hidden" id="diagram-svg" name="flow_diagram_svg">
                <button type="submit" id="save-button" class="btn btn-primary" disabled>Next ></button>
            </form>
            <ul>
            </ul>
        </div>
    </div>
</div>

{{ template "flow_diagram_js" }}

<script>
    var myDiagram = initDiagram("diagram");
    setDiagramStyles(myDiagram);

    // when the document is modified, add a "*" to the title and enable the "Save" button
    myDiagram.addDiagramListener("Modified", function(e) {
        var button = document.getElementById("save-button");
        if (button) button.disabled = !myDiagram.isModified;
        var idx = document.title.indexOf("*");
        if (myDiagram.isModified) {
            if (idx < 0) document.title += "*";
        } else {
            if (idx >= 0) document.title = document.title.substr(0, idx);
        }
    });

    // temporary links used by LinkingTool and RelinkingTool are also orthogonal:
    myDiagram.toolManager.linkingTool.temporaryLink.routing = go.Link.Orthogonal;
    myDiagram.toolManager.relinkingTool.temporaryLink.routing = go.Link.Orthogonal;

    load();

    // initialize the Palette that is on the left side of the page
    myPalette = $(go.Palette, "palette", {
        scrollsPageOnFocus: false,
        nodeTemplateMap: myDiagram.nodeTemplateMap,  // share the templates used by myDiagram
        model: new go.GraphLinksModel([  // specify the contents of the Palette
            {category: "Start", text: "Start"},
            {text: "Step"},
            {category: "Conditional", text: "???"},
            {category: "End", text: "End"},
            {category: "Comment", text: "Comment"}
        ])
    });

    // Show the diagram's model in JSON format that the user may edit
    function save() {
        document.forms['flow_diagram_question']['flow_diagram_json'].value = myDiagram.model.toJson();
        document.forms['flow_diagram_question']['flow_diagram_svg'].value = myDiagram.makeSvg().outerHTML;
        myDiagram.isModified = false;
    }

    function load() {
        myDiagram.model = go.Model.fromJson(
        {{if lt (len .Question.FlowDiagramAnswer.Text) 1 }}{
            "class": "go.GraphLinksModel",
            "linkFromPortIdProperty": "fromPort",
            "linkToPortIdProperty": "toPort",
            "nodeDataArray": [
                {"category":"Comment", "loc":"360 -10", "text":"Kookie Brittle", "key":-13},
                {"key":-1, "category":"Start", "loc":"175 0", "text":"Start"},
                {"key":0, "loc":"-5 75", "text":"Preheat oven to 375 F"},
                {"key":1, "loc":"175 100", "text":"In a bowl, blend: 1 cup margarine, 1.5 teaspoon vanilla, 1 teaspoon salt"},
                {"key":2, "loc":"175 200", "text":"Gradually beat in 1 cup sugar and 2 cups sifted flour"},
                {"key":3, "loc":"175 290", "text":"Mix in 6 oz (1 cup) Nestle's Semi-Sweet Chocolate Morsels"},
                {"key":4, "loc":"175 380", "text":"Press evenly into ungreased 15x10x1 pan"},
                {"key":5, "loc":"355 85", "text":"Finely chop 1/2 cup of your choice of nuts"},
                {"key":6, "loc":"175 450", "text":"Sprinkle nuts on top"},
                {"key":7, "loc":"175 515", "text":"Bake for 25 minutes and let cool"},
                {"key":8, "loc":"175 585", "text":"Cut into rectangular grid"},
                {"key":-2, "category":"End", "loc":"175 660", "text":"Enjoy!"}
            ],
            "linkDataArray": [
                {"from":1, "to":2, "fromPort":"B", "toPort":"T"},
                {"from":2, "to":3, "fromPort":"B", "toPort":"T"},
                {"from":3, "to":4, "fromPort":"B", "toPort":"T"},
                {"from":4, "to":6, "fromPort":"B", "toPort":"T"},
                {"from":6, "to":7, "fromPort":"B", "toPort":"T"},
                {"from":7, "to":8, "fromPort":"B", "toPort":"T"},
                {"from":8, "to":-2, "fromPort":"B", "toPort":"T"},
                {"from":-1, "to":0, "fromPort":"B", "toPort":"T"},
                {"from":-1, "to":1, "fromPort":"B", "toPort":"T"},
                {"from":-1, "to":5, "fromPort":"B", "toPort":"T"},
                {"from":5, "to":4, "fromPort":"B", "toPort":"T"},
                {"from":0, "to":4, "fromPort":"B", "toPort":"T"}
            ]
        }{{else }}{{.Question.FlowDiagramAnswer.Text}}{{end}}
        );
    }
</script>
{{ template "footer" }}
